Cascading Style Sheets (CSS)
	CSS is a mechanism that is used by developers to specify the presentation of structurally marked up documents such as HTML, SVG, MathML, etc. Everything visual about a website from the layout, formatting, fonts, colors andd etc is done using CSS.
THE CSS SAGA
	CSS was originally developed by Hakun Wium Lie and Bert Bos and is developed and maintained by the World Wide Web Consortium.
  Versions:
   ⦁	CSS 1 -  was developed by Hakun Wium Lie and Bert Bos. This version has capabilities that support Font properties, Color, Text Attributes, Alignment, Unique identification and generic classification of attributes, etc. 
   ⦁	CSS 2 - was developed by W3C. It includes capabilities like:  Positioning of elements (absolute, relative,fixed), z-index, new font properties (shadow,etc),bidirectional text and the concept of media types.
   ⦁	CSS 2.1- The version is a revision that fixes errors in CSS 2 and removed poorly supported features.
   ⦁	CSS 3  - is a modularized approach to CSS development. The version is divided into several modules, where each module adds new capabilities and extends the features. (css3-background, css3-box, css3-mediaqueries, css3-selectors, etc) 

HTML Style Sheets
	Author Style Sheets are styles specified by the developer of the website. These style sheets can be included in the html document or linked externally.
	           External Style Sheets -  The CSS rules are defined in a separate file with the     extension .css and is included in HTML files using the &#8249;link&#8250; tag.  The &#8249;link&#8250; tag can occur either in the head or body element.
                    &#8249;!DOCTYPE html&#8250;
	                  &#8249;html&#8250;	
		                    &#8249;head&#8250;
  			                    &#8249;title&#8250;Web Tech&#8249;/title&#8250;
   			                    &#8249;link rel="stylesheet" type="text/css" href="css/style.css"&#8250;
	                      &#8249;/head&#8250;
		                    &#8249;body&#8250;
			                        &#8249;h1&#8250;Web Systems and Technologies&#8249;/h1&#8250; 
	 		                        &#8249;p&#8250;External Style Sheets&#8249;/p&#8250;
		                    &#8249;/body&#8250;
	                  &#8249;/html&#8250;
                    
             Embedded Style Sheets  - The CSS rules are defined in the header section of the HTML document. Embedded styles will override the rules defined in an external style sheet. The rules are defined using the &#8249;style&#8250; tag. 
                    
                  &#8249;!DOCTYPE html&#8250;
	                &#8249;html&#8250;	
		                &#8249;head&#8250;
  			               &#8249;title&#8250;Web Tech&#8249;/title&#8250;
                       &#8249;style type = "text/css"&#8250; 
                           h1{ 
                              font-size:20px; 
                           } 
                           p{ 
                               color:blue; 
                           } 
                       &#8249;/style&#8250; 
	                 &#8249;/head&#8250;
		                &#8249;body&#8250;
			                &#8249;h1&#8250;Web Systems and Technologies&#8249;/h1&#8250; 
		                	&#8249;p&#8250;Embedded Style Sheets&#8249;/p&#8250;
		                &#8249;/body&#8250;
	              &#8249;/html&#8250;
                         
            Inline Style Sheet - The CSS rules are defined directly to an HTML element. This has the highest priority among the three, which means, it can override the rules defined in the external and the internal style sheets. The rules are added using the style attribute of the element.

                    &#8249;!DOCTYPE html&#8250;
	                  &#8249;html&#8250;	
		                &#8249;head&#8250;
  			               &#8249;title&#8250;Web Tech&#8249;/title&#8250;
                    &#8249;/head&#8250;
		                &#8249;body&#8250;
		                       &#8249;h1 style = "font-size:20px;" &#8250;Web Systems and Technologies&#8249;/h1&#8250; 
		                       &#8249;p style = "color:blue;" &#8250;Inline sStyle Sheets&#8249;/p&#8250;
		                &#8249;/body&#8250;
	                  &#8249;/html&#8250;
	
	
	User Style Sheets are styles defined by the end-user to override the styles defined by the author or developer of the site.
	User-Agent Style Sheets are the default styles provided by the browser to render HTML in a sensible manner when there is no ther style sheets provided.
			The user-agent style sheet has the lowest priority and can be overridden by the user or the author.
			
			

CSS STATEMENTS
 @RULES
	An @Rule is a css statement begginning with the @ sign followed by an identifier up to the semi -colon. 
@charset The @rule that defines the character set used.
	<style type="text/css">
  	 <!--
   	@charset "utf-8"
	   .......other CSS rules .....
 	  -->
	</style>
@import - This @ rule  allows to import or include rules of another style sheet.
	<style type="text/css">
  	 <!--
  		 @import "style1.css";
		   or
  		 @import url("style1.css");
  		 .......other CSS rules .....
 	  -->
	</style>
@font-face is an @ rule that describe the aspect of an external font to be downloaded
	<style tyle="text/css">
 	  <!--
  		 @font-face { font-family: "Scarborough Light";
   			        src: url("http://www.font.site/s/scarbo-lt"); }   
  	 -->
	</style>
Other @rules ( @media , @supports, @keyframes ....)
!important Rule  CSS are applied in the same order as they are defined but Any rule having !important will always be applied no matter where the rule is defined in the css document
	<style type="text/css">
        		 p { color: black !important; }
         		p { color: blue; }
                 </style>

CSS RULE SETS
A CSS is composed of style rules that can be interpreted by a user agent and apply the rules to the corresponding element in the html document. The style rule has three parts; the Selector, Property; and the value.
Selector is an HTML tag at which the rule will be applied on. Property is an attribute of an HTML tag that is converted into CSS property. Values are assigned to the property.
Syntax : (Selector) {(Property) : (Value);}
	table { border : 1px solid #F1F1F1;
	            border-collapse: collapse;}

CSS SELECTORS
 	CSS selectors are patterns used to select the HTML element a style is applied on using the element's name, id, class, attribute and so on.
ID Selectors- uses the id attribute of an HTML element to select the specific element. 
#myfirstparagraph {color: red;}
CLASS Selector- selects the element with a specific class attribute
	.firstparagraph{color:red;}
TYPE Selector- selects all element of the given type within the document
	p{color:red;}
ATTRIBUTE Selector -  matches elements based on the presence or value of a given attribute
	a[href="https://example.org"] { color: green;}
The CSS universal selector (*) matches elements of any type.
	* {color: green;}
 CSS PSEUDO-CLASS is a keyword added to a selector that specifies a special state of the selected element. Example: :active , :hover, :last-child
                div :hover { background-color: magenta;}
CSS PSEUDO-ELEMENT is a keyword added to a selector that lets you style a specific part of the selected element(s). Example: ::after, ::first-letter; ::backdrop
p::first-line { text-transform: uppercase;}
COMBINATORS
Adjacent sibling combinator (A +B)
       img + p {font-style: bold;} This will select paragraphs that directly follows any image
General sibling combinator (A ~ B)
       img ~ p {color: red;} This will select paragraphs that subsequently follows an image
Child combinator A > B
ul.mylist > li {margin: 2em;} Selects li that are children of  "mylist"
Descendant combinator A B
	li li { list-style-type: circle;} List items that are descendants of li

CSS RULE PRECEDENCE
At the highest level the cascade is what controls all css precedence and works according to Origin and importance and Specificity
1. Origin and importance
a.	 Transition Declarations
b.	Important user-agent declarations
c.	important user declarations
d.	Important override declarations
e.	important author declarations
f.	Animation Declaration
g.	Normal override declarations
h.	Normal author declarations
i.	Normal user declarations
j.	Normal user agent declarations
2. Specificity
	Specificity is calculated by counting various components of your css and expressing them in a form (a,b,c). 
a.	ID
b.	class, attribute, pseudo classes
c.	type selectors; pseudo elements
Examples:
p: 1 element – (0,0,1)
div: 1 element – (0,0,1)
#sidebar: 1 id – (1,0,0)
div#sidebar: 1 element, 1 id – (1,0,1)
div#sidebar p: 2 elements, 1 id – (1,0,2)
div#sidebar p.bio: 2 elements, 1 class, 1 id – (1,1,2)

			


